1. 将一个目录初始化为git repo
$git init

2. 将文件添加到版本控制（从[工作区]添加到stage[暂存区]）
$git add <file1> <file2>
$git add keeplearning.txt

3. 将stage暂存区的内容提交
$git commit -m <message>
$git commit -m "this is my first commit"

4. 查看仓库当前状态
$git status

5. 查看上次修改
$git diff keeplearning.txt

6. 查看提交日志（命令显示从最近到最远的提交日志）
$git log

7. 查看提交日志-带hash的单行记录显示
$git log --pretty=oneline

8. 想要回退到上一个版本
$git reset --hard HEAD^

9. 想要回退到上上个版本
$git reset --hard HEAD^^

10. 想要回退到上N个版本
$git reset --hard HEAD~N

11. 想回到未来的某个版本
$git reset --hard <hashID>
$git reset --hard 658fbb613227161a957bcb2006a651114dc580e5
//上述<hashID>不用输入那么长，开头几位就够了，git会自行寻找
$git reset --hard 658fbb

12. 想要恢复到未来版本，但不知道未来版本的hashID。查看每一次git命令历史
$git reflog

13. 想要丢弃对工作区文件所做的修改，还原到working tree clean状态
$git checkout -- <file>
$git checkout -- keeplearning.txt
//如果修改1已经被git add到暂存区，而后又做了修改2但还未添加到暂存区，则此时git checkout只会将修改2丢弃，即恢复到上一次git add后的状态（有修改1，无修改2）

14. 想要将已通过git add添加到暂存区的修改撤回(Unstage)，此命令可将暂存区的修改撤销，重新放回工作区（工作区的修改仍在，只不过将此文件从git暂存区中移出，这样可以提交剩余的位于暂存区的修改）
$git reset HEAD <file>
$git reset HEAD keeplearning.txt

15. 删除文件（记得commit！删除和add其实都是修改而已）
$git rm <file>

16. 先有本地库，如何与远程库关联：在remote机器上新建repo，并将本地现有的repo与之关联，完成remote repo的创建
//首先在github上创建一个新的repo
//而后本地输入命令以关联并推送
//为<url>所在的仓库添加一个名为<name>的remote
$git remote add <name> <url>
$git remote add origin git@github.com:xiyu23/frontend-knowledge-points.git

//首次推送关联
$git push -u origin master

17. 创建分支
//-b表示创建并切换到新分支
$git checkout -b <branch-name>

18. 查看当前所处分支，分支前面标'*'的就是当前分支
$git branch